import React, { useState } from 'react';
import { Image, StyleSheet, Text, TouchableOpacity, View, FlatList } from 'react-native';
import RNPickerSelect from 'react-native-picker-select';
import { responsiveFontSize, responsiveHeight, responsiveWidth, responsiveScreenHeight, responsiveScreenWidth } from 'react-native-responsive-dimensions';

const DashScreen = ({ navigation }) => {
  const [selectedCoin, setSelectedCoin] = useState(null);
  const Dcoins = [
    { label: 'Bitcoin', value: 'bitcoin' },
    { label: 'Ethereum', value: 'ethereum' },
  ];
  const coins = [
    { label: 'Euro', value: 'euro' },
    { label: 'Dollar', value: 'dollar' },
  ];
  const watchlist = [
    { key: 'bitcoin', symbol: 'BTC' },
    { key: 'ethereum', symbol: 'ETH' },
    { key: 'ripple', symbol: 'XRP' },
    { key: 'litecoin', symbol: 'LTC' },
    { key: 'cardano', symbol: 'ADA' },
    { key: 'polkadot', symbol: 'DOT' },
    { key: 'bitcoinCash', symbol: 'BCH' },
    { key: 'stellar', symbol: 'XLM' },
    { key: 'chainlink', symbol: 'LINK' },
    { key: 'binanceCoin', symbol: 'BNB' },
    { key: 'tether', symbol: 'USDT' },
  ];
  
  return (
    <View style={{ flex: 1 }}>
    <TouchableOpacity onPress={() => navigation.navigate("Profile")}>
    <Image source={require('../assets/profile.png')} style={styles.user} />
    </TouchableOpacity>
    <Text style={styles.title}>Converter</Text>
    <RNPickerSelect
    onValueChange={(value) => setSelectedCoin(value)}
    items={Dcoins}
    style={pickerSelectStyles}
    placeholder={{ label: 'Select a coin...', value: null }}
    />
    <RNPickerSelect
    onValueChange={(value) => setSelectedCoin(value)}
    items={coins}
    style={pickerSelectStyles}
    placeholder={{ label: 'Select a coin...', value: null }}
    />
    <Text style={styles.watchlistTitle}>Watchlist</Text>
    <FlatList
    data={watchlist}
    renderItem={({ item }) => (
      <TouchableOpacity style={styles.coinButton}>
      <Text style={styles.coinText}>{item.symbol}</Text>
      </TouchableOpacity>
      )}
      keyExtractor={(item) => item.key}
      style={styles.scrollView}
      />
      </View>
      );
    };
    
    const styles = StyleSheet.create({
      user: {
        height: responsiveScreenHeight(5),
        width: responsiveWidth(180),
        marginTop: 50,
        resizeMode: 'contain',
      },
      title: {
        fontSize: 35,
        color: '#000',
        marginTop: 70,
        marginHorizontal: 20,
      },
      watchlistTitle: {
        fontSize: 35,
        color: '#000',
        marginTop: 30,
        marginHorizontal: 20,
      },
      scrollView: {
        marginHorizontal: responsiveWidth(5),
        marginBottom: 80,
      },
      coinButton: {
        backgroundColor: '#E5E3E3',
        padding: responsiveHeight(1,7),
        borderRadius: 10,
        marginBottom: responsiveHeight(1),
      },
      coinText: {
        fontSize: responsiveFontSize(2.2),
        color: '#000',
      },
      input: {
        height: 40,
        margin: 12,
        borderWidth: 1,
        padding: 10,
      },
    });
    
    const pickerSelectStyles = StyleSheet.create({
      inputIOS: {
        fontSize: responsiveFontSize(2),
        paddingVertical: responsiveHeight(1),
        paddingHorizontal: responsiveWidth(2),
        borderWidth: 1,
        borderColor: 'gray',
        borderRadius: 4,
        color: 'black',
        paddingRight: 30, 
        marginHorizontal: responsiveWidth(5),
        marginTop: responsiveHeight(1),
      },
    });
    
    export default DashScreen;
