import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';
import { Picker } from '@react-native-picker/picker';

function Converter() {
    const apiUrl = "https://api.coingecko.com/api/v3/exchange_rates";

    const defaultFirstSelectValue = "Bitcoin";
    const defaultSecondSelectValue = "Ether";

    const [cryptoList, setCryptoList] = useState([]);
    const [inputValue, setInputValue] = useState("0");
    const [firstSelect, setFirstSelect] = useState(defaultFirstSelectValue);
    const [secondSelect, setSecondSelect] = useState(defaultSecondSelectValue);
    const [result, setResult] = useState("0");

    useEffect(() => {
        fetchData();
    }, []);

    async function fetchData() {
        const response = await fetch(apiUrl);
        const jsonData = await response.json();

        const data = jsonData.rates;
        const tempArray = Object.entries(data).map((item) => {
            return {
                value: item[1].name,
                label: item[1].name,
                rate: item[1].value,
            };
        });
        setCryptoList(tempArray);
    }

    useEffect(() => {
        if (cryptoList.length === 0) return;

        const firstSelectRate = cryptoList.find((item) => item.value === firstSelect)?.rate;
        const secondSelectRate = cryptoList.find((item) => item.value === secondSelect)?.rate;

        const resultValue = (inputValue * secondSelectRate) / firstSelectRate;
        setResult(resultValue.toFixed(6));
    }, [inputValue, firstSelect, secondSelect]);

    return (
        <View style={styles.container}>
            <View style={styles.cryptoCard}>
                <Text style={styles.title}>Crypto Converter</Text>
                <TextInput
                    style={styles.input}
                    onChangeText={setInputValue}
                    value={inputValue}
                />
                <View style={styles.selectBox}>
                    <Picker
                        selectedValue={firstSelect}
                        style={styles.picker}
                        onValueChange={(itemValue) => setFirstSelect(itemValue)}
                    >
                        {cryptoList.map((item, index) => (
                            <Picker.Item key={index} label={item.label} value={item.value} />
                        ))}
                    </Picker>
                    <Picker
                        selectedValue={secondSelect}
                        style={styles.picker}
                        onValueChange={(itemValue) => setSecondSelect(itemValue)}
                    >
                        {cryptoList.map((item, index) => (
                            <Picker.Item key={index} label={item.label} value={item.value} />
                        ))}
                    </Picker>
                </View>
                <Text>{`${inputValue} ${firstSelect} = ${result} ${secondSelect}`}</Text>
            </View>
        </View>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    cryptoCard: {
        minWidth: 400,
        padding: 20,
    },
    title: {
        fontSize: 24,
        marginBottom: 20,
    },
    input: {
        height: 40,
        borderColor: 'gray',
        borderWidth: 1,
        marginBottom: 20,
    },
    selectBox: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
    },
    picker: {
        height: 50,
        width: 200,
    },
});

export default Converter;
